#ifndef MONITOR_STATUS
#define MONITOR_STATUS

namespace msquare {

constexpr unsigned int SHIFT_MONITOR = 16;
constexpr unsigned int SHIFT_STATUS = 12;

enum class MonitorObject : unsigned int {
  // topic from (0x00-0x5F)
  NODES_NAVI_FUSION = 0x01 << SHIFT_MONITOR,
  NODES_OBJECT_PREDICTION = 0x02 << SHIFT_MONITOR,
  NODES_VEHICLE_BRAKE_INFO_REPORT = 0x03 << SHIFT_MONITOR,
  NODES_MSD_PLANNING_MSGS_PLANNING = 0x04 << SHIFT_MONITOR,
  NODES_COMPUTE_FUSION_TRACKING = 0x05 << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_F30 = 0x06 << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_F100 = 0x07 << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_F50 = 0x08 << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_LF100 = 0x09 << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_LR100 = 0x0A << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_R50 = 0x0B << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_RF100 = 0x0C << SHIFT_MONITOR,
  NODES_SENSOR_CAMERA_RR100 = 0x0D << SHIFT_MONITOR,
  NODES_ROBOSENSE_POINTS = 0x0E << SHIFT_MONITOR,
  NODES_PERCEPTION_VISION_PREDICTION = 0x0F << SHIFT_MONITOR,
  NODES_RADAR_ARS40821_OBJECTS = 0x10 << SHIFT_MONITOR,
  NODES_HDMAP_MMP = 0x11 << SHIFT_MONITOR,
  // hardware from (0x60-0xBF)
  HAEDWARE_CAMERA_F30 = 0x60 << SHIFT_MONITOR,
  HARDWARE_CAMERA_F100 = 0x61 << SHIFT_MONITOR,
  HARDWARE_CAMERA_F50 = 0x62 << SHIFT_MONITOR,
  HARDWARE_CAMERA_LF100 = 0x63 << SHIFT_MONITOR,
  HARDWARE_CAMERA_LR100 = 0x64 << SHIFT_MONITOR,
  HARDWARE_CAMERA_R50 = 0x65 << SHIFT_MONITOR,
  HARDWARE_CAMERA_RF100 = 0x66 << SHIFT_MONITOR,
  HARDWARE_CAMERA_RR100 = 0x67 << SHIFT_MONITOR,
  HARDWARE_RADAR_FRONT = 0x68 << SHIFT_MONITOR,
  HARDWARE_LIDAR = 0x69 << SHIFT_MONITOR,
  HARDWARE_DRIVE_BY_WIRE = 0x6A << SHIFT_MONITOR, //线控
  HARDWARE_SNESOR_HUB = 0x6B << SHIFT_MONITOR,
  HARDWARE_SWITCHES = 0x6C << SHIFT_MONITOR,     //交换机
  HARDWARE_NETWORK_CARD = 0x6D << SHIFT_MONITOR, // 4G网卡

  // ipc_monitor from (0xC0-0xEF)

  IPC_GPU = 0xC0 << SHIFT_MONITOR,
  IPC_CPU = 0xC1 << SHIFT_MONITOR,
  IPC_MEMORY = 0xC2 << SHIFT_MONITOR,
  IPC_NETWORK_CARD = 0xC3 << SHIFT_MONITOR,
  IPC_DISK = 0xC4 << SHIFT_MONITOR,
  IPC_PROCESS = 0xC5 << SHIFT_MONITOR,
  IPC_TEMPERATURE = 0xC6 << SHIFT_MONITOR,
  // fleet from 0xF0-0xFF)
  FLEET = 0xF0 << SHIFT_MONITOR
};

enum class MonitorStatus {
  STATUS_NORMAL = 0x001 << SHIFT_STATUS,
  STATUS_WARN = 0x002 << SHIFT_STATUS,
  STATUS_ERROR = 0x003 << SHIFT_STATUS
};
unsigned int encode(MonitorObject object, MonitorStatus status,
                    unsigned int detail_status = 0) {
  return (unsigned int)object | (unsigned int)status | detail_status;
}

} // namespace msquare
#endif
